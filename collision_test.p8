pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
--pico-8 functions
function _init()
 boxes = {}
	b1 = make_box(64,64,4,6,12,17,0,"pistol")
 add(boxes,b1)	
	b2 = make_box(100,100,4,6,12,33,1,"pistol")	
 add(boxes,b2)
end

function _update()
	for b in all(boxes) do
	 b:update()
	end
--	b2:update()
end

function _draw()
	cls()
	map(0,0,0,0,128,128)
	for b in all(boxes) do
	 b:draw()
	end
	--b2:draw()
	debug()
end
-->8
--make functions and other unorganized stuff for now
message = "bonjour"

function make_box(x,y,w,h,c,s,pnum,gun)
	local b = {}
	b.x = x
	b.y = y
	b.w = w
	b.h = h
	b.c = c
	b.s = s
	b.f = 0
	b.hp = 3
	b.pnum = pnum
	b.gun = make_gun(gun)
	b.flipx = false
	b.vx = 0
	b.vy = 0
 b.grav = 0.35
 b.max_fall_speed = 3
 b.grounded = false
	b.update = function(self)
		local old_x = self.x
		local old_y = self.y
		
		self.vx = 0
		--self.vy = 0
		self.vy += self.grav
		if (self.vy>self.max_fall_speed) then
			self.vy = self.max_fall_speed
		end
		
		self.shot_pressed = false
		
		local bl = btn(0,self.pnum)
		local br = btn(1,self.pnum)
		local bu = btn(2,self.pnum)
		local bd = btn(3,self.pnum)
		local bshoot = btn(4,self.pnum)
		
		if(bl) then
			br = false
			self.flipx = true
			self.vx = -1.5
			if(self.grounded) self.f = (self.f+0.25)%4
		elseif (br) then
			self.flipx = false
			self.vx = 1.5
			if(self.grounded) self.f = (self.f+0.25)%4
		end
	
 if(bu and self.grounded) then
	--		bd = false
			self.vy = -4
			self.grounded=false
			self.f = 4
	end
	
	if(bd and not self.grounded and self.vy<0) then
	 self.vy=0
	end
	
	if(bshoot) then
	 self.shot_pressed = true
  local offset	
	 if (self.flipx) then
	  offset = -self.w+1
	 else
	  offset = self.w
	 end
	 self.gun:shoot(self.x+offset,self.y,self.flipx)
	 
	end
	--elseif (bd) then
	--		self.vy = 2
	--	end	
		for i=1,abs(self.vx),1 do
		 self.x += (1/abs(self.vx))*self.vx
				 
		 if collision(self)then
			 self.x = old_x
			 break
		 else
		  old_x = self.x
		 end
		end
  for i=1,abs(self.vy),1 do
		 self.y += (1/abs(self.vy))*self.vy
				 
		 if collision(self)then
			 self.y = old_y
			 if(self.vy>0)then
			  if(not self.grounded)self.f = 0
			  self.grounded = true
			  
			 end
			 self.vy = 0
			break
		 else
		  old_y = self.y
		  self.grounded = false
		 end
		end
		self.gun:update()
 end
	b.draw = function(self)	
		spr(self.s+self.f,self.x-self.w/2-1,self.y-self.h/2,1,1,self.flipx,false)
		self.gun:draw()
		rectfill(self.x-self.w/2+1,self.y-self.h/2-1,self.x-self.w/2+self.hp,self.y-self.h/2-1,11)
		--rectfill(self.x-self.w/2+1,self.y-self.h/2+1,self.x+self.w/2,self.y+self.h/2,c)
	end	
	b.take_dmg = function(self,dmg)
	 self.hp-=dmg
	 dmg_taken = true
	 sfx(self.pnum)
	 if (self.hp<=0) die(self.pnum)
	end
	return b
end

function make_gun(gun)
 local g = {}
 g.gun_type = gun
 g.bullets = {}
 g.shoot = function(self,x,y,flipx)
  if(self.fire_time>self.fire_rate) then
   self.gun_shot = true
   self.fire_time = 0
   
   local bull = make_bullet(x,y,flipx,self.gun_type,self)
   add(self.bullets,bull)
  end
 end
 g.update = function(self)
  self.fire_time+=1
  self.gun_updated = true
  for b in all(self.bullets) do
  	b:update()
  end
 end
 g.draw = function(self)
  for b in all(self.bullets) do
   b:draw()
  end
 end
 g.fire_time=0
 if(g.gun_type == "pistol") then
  g.fire_rate=5
 end
 return g
end

function make_bullet(x,y,flipx,bullet,parent)
 local b = {}
 b.x = x
 b.y = y
 b.parent = parent
 
 if(bullet == "pistol")then
  if(flipx) then
   b.vx = -4
  else
   b.vx = 4
  end
  b.w = 1
  b.h = 1
  b.draw = function(self)
  	pset(self.x,self.y,6)
  end
 end
 
 b.update = function(self)
  for i=1,abs(self.vx),1 do
   self.x += self.vx/abs(self.vx)
   local target = collision_player(self)
  
   if(not (target == nil)) then
    --dmg target
    --delete self
    target:take_dmg(1)
    target_found = true
    del(self.parent.bullets,self)
    break
   end
  
   if(collision(self))del(self.parent.bullets,self)
  end
 end
 
 
 
 return b
end

function collision(self)
		return solid(self.x-self.w/2+1,self.y-self.h/2+1)
		    or solid(self.x+self.w/2,self.y-self.h/2+1)
		    or solid(self.x-self.w/2+1,self.y+self.h/2)
		    or solid(self.x+self.w/2,self.y+self.h/2)
end

function collision_player(self)
 local temp = self
 for b in all(boxes) do
  if (intersects(b,temp)) then
   touch_player = true
   return b
  end
 end
end

function intersects(obj1,obj2)
 return (obj1.x-obj1.w/2+1<obj2.x+obj2.w/2)
    and (obj2.x-obj2.w/2+1<obj1.x+obj1.w/2)
    and (obj1.y-obj1.h/2+1<obj2.y+obj2.h/2)
    and (obj2.y-obj2.h/2+1<obj1.y+obj1.h/2)
end

function stairs(x,y)
 tile_x = (x/8)
	tile_y = (y/8)
	local val = mget(tile_x,tile_y)
	
	return fget(val,1) 
end

function solid(x,y)
	tile_x = (x/8)
	tile_y = (y/8)
	local val = mget(tile_x,tile_y)
	
	return fget(val,0)
end

function die(pnum)
 player_died = true
 if(pnum == 0) message = "player 2 won"
 if(pnum == 1) message = "player 1 won"
 sfx(2+pnum)
 _init()
end

function debug()
	print(message,0,0)
end
-->8
--utils
function vector_2d(x,y)
	local v = {}
	v.x = x
	v.y = y
	v.length = function(self)
	 return sqrt(self.x^2+self.y^2)
	end
	v.angle = function(self)
	 return atan2(self.x,self.y)
	end
	v.add_vec = function(self,vector)
	 self.x+=vector.x
	 self.y+=vector.y
	end
	v.scale = function(self,k)
	 self.x*=k
	 self.y*=k
	end
	return v
end
__gfx__
00000000888888880000000880000000888888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000888888880000008888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700888888880000088888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000888888880000888888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000888888880008888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700888888880088888888888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000888888880888888888888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000888888888888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000880000000000000000000000000000000000000000000000000000000000000000000000
00000000001111000011110000111100001111000011110000000000086868000000000000000000000000000000000000000000000000000000000000000000
000000000d1171000d1171000d1171000d1171000d11710000000000088688808000000000000000000000000000000000000000000000000000000000000000
000000000d1dddd90d1dddd90d1dddd90d1dddd90d1dddd900066000886868880858590000000000000000000000000000000000000000000000000000000000
000000000d1555da0d1555da0d1555da0d1555da0d1555da00066000888688888585899000000000000000000000000000000000000000000000000000000000
00000000001111000011111000111100011111000111111000000000086868800858590000000000000000000000000000000000000000000000000000000000
00000000001001000010000000100100000001000000000000000000088688008000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000880000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000002222000022220000222200002222000022220000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000d2272000d2272000d2272000d2272000d22720000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000d2dddd90d2dddd90d2dddd90d2dddd90d2dddd900000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000d2555da0d2555da0d2555da0d2555da0d2555da00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000002222000022222000222200022222000222222000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000002002000020000000200200000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0001020204000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000010000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000101010101010000000201010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000103000000000201010404040100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000001030000020100000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000010404010000000002010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000404000000000201010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000404000000020101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000404000002010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
0001000021350113500b3500335003350033500235002350000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000186500f650056500365003650036500365004350000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00060000280502c050300500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00060000272502c250302500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
